---

- name: Bundle certificates and keys into PKCS#12
  command: >-
    easyrsa --passin=pass:{{ item.pass }} --passout=pass:{{ item.pass }}
      export-p12 {{ item.name }}
  args:
    creates: "{{ easyrsa_pki_dir }}/private/{{ item.name }}.p12"
  # PKCS#12 needs an output password
  when: item.pass | default(None)
  loop: "{{ easyrsa_to_pkcs12 }}"
  no_log: "{{ lookup('ansible.builtin.env', 'MOLECULE_FILE') is falsy }}"

- name: Convert private keys to PKCS#8
  command: >-
    easyrsa
      {{ '--passin=pass:' + item.pass | string if item.pass | default(None) else '' }}
      {{ '--passout=pass:' + item.pass | string if item.pass | default(None) else '' }}
    export-p8 {{ item.name }}
  args:
    creates: "{{ easyrsa_pki_dir }}/private/{{ item.name }}.p8"
  loop: "{{ easyrsa_to_pkcs8 }}"
  no_log: "{{ lookup('ansible.builtin.env', 'MOLECULE_FILE') is falsy }}"

- name: Convert certificates to PKCS#7
  command: >-
    easyrsa export-p7 {{ item.name }}
  args:
    creates: "{{ easyrsa_pki_dir }}/issued/{{ item.name }}.p7b"
  loop: "{{ easyrsa_to_pkcs7 }}"

- name: Convert private keys to PKCS#1
  command: >-
    easyrsa
      {{ '--passin=pass:' + item.pass | string if item.pass | default(None) else '' }}
      {{ '--passout=pass:' + item.pass | string if item.pass | default(None) else '' }}
    export-p1 {{ item.name }}
  args:
    creates: "{{ easyrsa_pki_dir }}/private/{{ item.name }}.p1"
  loop: "{{ easyrsa_to_pkcs1 }}"
  no_log: "{{ lookup('ansible.builtin.env', 'MOLECULE_FILE') is falsy }}"
